name: Release

on:
  release:
    types: [published]

env:
  CIBW_BUILD_VERBOSITY: 3
  CIBW_TEST_REQUIRES: "pytest"
  CIBW_TEST_COMMAND: "pytest -svv {project}/tests/python/"
  CIBW_SKIP: "cp313-win_amd64"  # Python 3.13 is not quite ready yet
  MLC_CIBW_VERSION: "2.20.0"
  MLC_PYTHON_VERSION: "3.9"
  MLC_CIBW_WIN_BUILD: "cp3*-win_amd64"
  MLC_CIBW_MAC_BUILD: "cp3*-macosx_arm64"
  MLC_CIBW_LINUX_BUILD: "cp3*-manylinux_x86_64"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MLC_PYTHON_VERSION }}
      - uses: pre-commit/action@v3.0.1
  windows:
    name: Windows
    runs-on: windows-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MLC_PYTHON_VERSION }}
      - name: Install cibuildwheel
        run: python -m pip install twine cibuildwheel=="${{ env.MLC_CIBW_VERSION }}"
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ env.MLC_CIBW_WIN_BUILD }}
      - name: Show package contents
        run: python scripts/show_wheel_content.py wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-windows
          path: ./wheelhouse/*.whl
  macos:
    name: MacOS
    runs-on: macos-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MLC_PYTHON_VERSION }}
      - name: Install cibuildwheel
        run: python -m pip install twine cibuildwheel==${{ env.MLC_CIBW_VERSION }}
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ env.MLC_CIBW_MAC_BUILD }}
      - name: Show package contents
        run: python scripts/show_wheel_content.py wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-macos
          path: ./wheelhouse/*.whl
  linux:
    name: Linux
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MLC_PYTHON_VERSION }}
      - name: Install cibuildwheel
        run: python -m pip install twine cibuildwheel==${{ env.MLC_CIBW_VERSION }}
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: ${{ env.MLC_CIBW_LINUX_BUILD }}
      - name: Show package contents
        run: python scripts/show_wheel_content.py wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-linux
          path: ./wheelhouse/*.whl
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [windows, macos, linux]
    environment:
      name: pypi
      url: https://pypi.org/p/mlc-python
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MLC_PYTHON_VERSION }}
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./wheelhouse
      - name: Prepare distribution files
        run: |
          mkdir -p dist
          mv wheelhouse/wheels-macos/*.whl dist/
          mv wheelhouse/wheels-linux/*.whl dist/
          mv wheelhouse/wheels-windows/*.whl dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          password: ${{ secrets.MLC_PYPI_API_TOKEN }}
